@using TotalBase.Enums
@using TotalPortal.Configuration

@model TotalPortal.Areas.Commons.ViewModels.ICommodityViewModel

<div>
    @(Html.Kendo().Grid<TotalModel.Models.CommodityIndex>()
        .Name("kendoGridIndex")
        .Columns(columns =>
        {
            columns.Bound(p => p.CommodityID).DisplayNameTitle().Hidden();

            columns.Bound(p => p.CommodityCategoryName1).Title("ROOT").Hidden();
            columns.Bound(p => p.CommodityCategoryName2).Title("CAT").Hidden();
            columns.Bound(p => p.CodePartA).Title("Mã").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(25).HtmlAttributes(new { @class = "index-nav-column" }).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Commons/" + Model.ControllerName, action = "Edit" }) + "/#= CommodityID #'>#=CodePartA#</a>").Hidden(@Model.IsItem);
            columns.Bound(p => p.CodePartB).Title("Phân loại").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(25).ClientTemplate(@Model.IsItem ? "<a href='" + Url.RouteUrl("Default", new { controller = "Commons/" + Model.ControllerName, action = "Edit" }) + "/#= CommodityID #'>#=CodePartB#</a>" : "").Hidden(GlobalEnums.CBPP || GlobalEnums.DMC);
            columns.Bound(p => p.CodePartC).Title("Mã màu").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(10).Hidden(GlobalEnums.CBPP || GlobalEnums.DMC);
            columns.Bound(p => p.CodePartD).Title("A/C/G/F/T").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(10).Hidden(@Model.IsMaterial || GlobalEnums.CBPP || GlobalEnums.DMC);
            columns.Bound(p => p.CodePartA).Title("Công thức").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(10).Hidden(!@Model.IsItem || GlobalEnums.CBPP || GlobalEnums.DMC);
            columns.Bound(p => p.CodePartE).Title("Độ dầy").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(10).Hidden(!@Model.IsItem || GlobalEnums.CBPP || GlobalEnums.DMC);
            columns.Bound(p => p.CodePartF).Title("Chiều rộng").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(10).Hidden(!@Model.IsItem || GlobalEnums.CBPP || GlobalEnums.DMC);

            columns.Bound(p => p.OriginalName).Title("Tên").Width(10).Hidden(!GlobalEnums.CBPP);
            columns.Bound(p => p.Name).Title(Model.IsMaterial? "Tên NVL" : "Tên sản phẩm").Width(180);
            

            columns.Bound(p => p.BomCode).Title(@Model.IsItem ? "Mã công thức" : "Mã màng").Width(126).Hidden(!@Model.IsItem && !@Model.IsProduct);
            columns.Bound(p => p.MoldCode).Title("M").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(20).Hidden(!@Model.IsProduct);
            columns.Bound(p => p.MoldQuantity).Title("P/M").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Filterable(false).Width(10).Hidden(!@Model.IsProduct);

            columns.Bound(p => p.Weight).Title("TL").Format(GlobalEnums.CBPP ? "{0:n0}" : "{0:n3}").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(10).Hidden(!((GlobalEnums.CBPP && @Model.IsMaterial) || (!GlobalEnums.CBPP && @Model.IsItem)));
            columns.Bound(p => p.Packing).Title("ĐD").Width(10).Hidden(!GlobalEnums.CBPP);
            
            columns.Bound(p => p.Specification).Title("Tồn trữ, bảo quản").Width(138).Hidden(@Model.IsProduct || !GlobalEnums.CBPP);
            columns.Bound(p => p.Remarks).Title("Ghi chú").Width(127).Hidden(@Model.IsProduct);

            columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(10)
                .ClientTemplate("<a class='k-button' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Commons/" + Model.ControllerName, action = "Delete" }) + "/#= CommodityID #'><span class='k-icon sbt-delete'></span></a>");
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <button type="button" class="k-button" onclick="location.href='@Url.Action("Create", Model.ControllerName)'"> <img src="~/Content/Images/Mains/Addnewcommodities24.png" /> Thêm mã mới </button>
                <div class="toolbar" style="float: right;">
                    <label>Nhập ít nhất 2 ký tự để tìm</label>
                    <input id="indexFilterText" class="k-textbox" style="text-align: center; " onkeyup="indexFilterText_KeyUp()" />
                </div>
            </text>);
        })
                            .Pageable()
            //.Groupable()
            //.Filterable()
                            .Selectable()
                            .Sortable()
                            .Events(e =>
                            {
                                e.DataBound("hightLightSelectedRow");
                            })
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GetCommodityIndexes", "CommodityAPIs", new { area = "Commons" }).Data("onCommodityIndexes"))
                                .Group(group => group.Add(p => p.CommodityCategoryName1)).Group(group => group.Add(p => p.CommodityCategoryName2))
                                .PageSize(20)
                                .Model(model =>
                                {
                                    model.Id(x => x.CommodityID);
                                    model.Field(m => m.CommodityID).DefaultValue(0);
                                })
                                .ServerOperation(true)
                            )
                            .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">
    function onCommodityIndexes(e) {
        return {
            nmvnTaskID: requireConfig.pageOptions.NmvnTaskID
        };
    }

    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("CommodityID", '@ViewBag.SelectedEntityID');
        });
    }


    function indexFilterText_KeyUp() {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");

        if (indexFilterText && indexFilterText.length >= "@Settings.MinLenght2") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "Code", operator: "contains", value: indexFilterText },
                    { field: "OfficialCode", operator: "contains", value: indexFilterText },
                    { field: "OriginalName", operator: "contains", value: indexFilterText },
                    { field: "Name", operator: "contains", value: indexFilterText },
                    { field: "CommodityCategoryName2", operator: "contains", value: indexFilterText },
                    { field: "Specification", operator: "contains", value: indexFilterText },
                    { field: "Remarks", operator: "contains", value: indexFilterText }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }
</script>



<style>
    .k-grid td {
        border-width: 0;
        /*background-color: #f5f5f5;*/
        /*white-space: pre-line;
        word-wrap: initial;*/
        /*white-space: nowrap;
        text-overflow: ellipsis;
        table-layout: fixed;*/
    }

    .k-grid {
        background: #f5f5f5;
    }
</style>
