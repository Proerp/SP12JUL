@using TotalPortal.Configuration

<div id="popupWindow"></div>

<div>
        @(Html.Kendo().Grid<TotalModel.Models.BomIndex>()
            .Name("kendoGridIndex")
            .Columns(columns =>
            {
                columns.Bound(p => p.BomID).DisplayNameTitle().Hidden();
                columns.Bound(p => p.CustomerName).Title("KH").Hidden();

                columns.Bound(p => p.Code).Title("MCT").Width(118).Filterable(false).HtmlAttributes(new { @class = "index-nav-column" }).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Commons/Boms", action = "Edit" }) + "/#= BomID #'>#=Code#</a>");
                columns.Bound(p => p.EffectiveDate).Title("Ngày").Format("{0:dd/MM/yy}").Width(30).HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" });
                columns.Bound(p => p.Name).Title("Tên hỗn hợp").Width(160);
                columns.Bound(p => p.CommodityCode).Title("Mã màng").Width(250);
                columns.Bound(p => p.CommodityName).Title("Tên màng").Width(180);
                columns.Bound(p => p.LayerCount).Title("Số Trục").Width(20).HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" });
                columns.Bound(p => p.Description).Title("Ghi chú").Width(190);

                columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(10)
                    .ClientTemplate("<a class='k-button' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Commons/Boms", action = "Delete" }) + "/#= BomID #'><span class='k-icon sbt-delete'></span></a>");
            })
            .ToolBar(toolbar =>
            {
                toolbar.Template(@<text>                    
                    <button type="button" class="k-button" onclick="location.href='@Url.Action("Create", "Boms")'"> <img src="~/Content/Images/Mains/Size24/settings-icon-24.png" /> Thêm công thức </button>                
                    <div class="toolbar" style="float: right;">
                        <label>Nhập số MCT, tên hỗn hợp hoặc khách hàng</label>
                        <input id="indexFilterText" class="k-textbox" style="text-align: center; " onkeyup="indexFilterText_KeyUp()" />
                    </div>
                </text>            );
            })
            .Filterable(e => e.Enabled(false))        
            .Pageable()
            .Selectable()
            .Sortable()
            .Events(e =>
            {
                e.DataBound("hightLightSelectedRow");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Group(group => group.Add(p => p.CustomerName))
                .Read(read => read.Action("GetBomIndexes", "BomAPIs", new { area = "Commons" }))
                .Sort(sort =>
                    {
                        sort.Add(p => p.EntryDate).Descending();
                        sort.Add(p => p.BomID).Descending();
                    })
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(x => x.BomID);
                    model.Field(m => m.BomID).DefaultValue(0);
                })
                .ServerOperation(true)
                )
            .HtmlAttributes(new { @class = "grid-class" }))
</div>



<script type="text/javascript">
    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("BomID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "Boms")", "Chọn nhà cung cấp", "838", "330");
        });
    }


    decoratingKindex = function (idx, elem) {

        if (elem.Approved == null || elem.Approved == false) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("NotApproved");
        }
        else {
            if (elem.InActive != null && elem.InActive == true) {
                $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus");
            }

            if (elem.InActivePartial != null && elem.InActivePartial == true) {
                $('tr[data-uid="' + elem.uid + '"]').addClass("isBonus1");
            }
        }

    }






    function indexFilterText_KeyUp() {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");
        
        if (indexFilterText && indexFilterText.length >= "@Settings.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "Code", operator: "contains", value: indexFilterText },
                    { field: "Name", operator: "contains", value: indexFilterText },
                    { field: "Reference", operator: "contains", value: indexFilterText },
                    { field: "CustomerCode", operator: "contains", value: indexFilterText },
                    { field: "CustomerName", operator: "contains", value: indexFilterText },
                    { field: "CommodityCode", operator: "contains", value: indexFilterText },
                    { field: "CommodityName", operator: "contains", value: indexFilterText },
                    { field: "Description", operator: "contains", value: indexFilterText }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }

</script>



