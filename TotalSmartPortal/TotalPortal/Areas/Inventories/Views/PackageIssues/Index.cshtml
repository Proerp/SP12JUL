@using TotalPortal.Configuration

<div id="popupWindow"></div>

<div>
    @(Html.Kendo().Grid<TotalModel.Models.PackageIssueIndex>()
        .Name("kendoGridIndex")
        .Columns(columns =>
        {
            columns.Bound(p => p.PackageIssueID).DisplayNameTitle().Hidden();
            columns.Bound(p => p.EntryDate).Title("Ngày").Format("{0:dd/MM/yy}").Hidden();
            columns.Bound(p => p.WorkshiftName).Title("SX").Hidden();
            columns.Bound(p => p.BlendingInstructionBriefs).Title("BIS").Hidden();

            columns.Bound(p => p.Reference).Title("Phiếu").Width(10).HtmlAttributes(new { @class = "index-nav-column" }).ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Inventories/PackageIssues", action = "Edit" }) + "/#= PackageIssueID #'>#=Reference#</a>");
            columns.Bound(p => p.UserLastName).Title("MSCN").Width(12);
            columns.Bound(p => p.UserFirstName).Title("Mã cân").Width(12);


            columns.Bound(p => p.Caption).Title("NVL").Width(396);
            columns.Bound(p => p.Description).Title("Diễn giải").Width(236);

            columns.Bound(p => p.TotalRows).Title("SL").Format(Settings.kfmN0).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(10).ClientFooterTemplate("#= kendo.format('" + Settings.kfmN0 + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });
            columns.Bound(p => p.TotalQuantity).Title("KL").Format(Settings.kfmQuantity).HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(10).ClientFooterTemplate("#= kendo.format('" + Settings.kfmQuantity + "', sum) #").FooterHtmlAttributes(new { @class = "grid-number-column" });

            columns.Template(t => { }).Title("!").ClientTemplate("<input class='IsSelected' #= Approved ? '':checked='checked' #  type='checkbox' disabled='disabled'/>").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" }).Width(3);
            
            columns.Template(model => null).HtmlAttributes(new { @class = "grid-column-center" }).Width(80)
                .ClientTemplate("<a class='k-button' title='Lệnh pha chế' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Productions/BlendingInstructions", action = "Edit" }) + "/#= BlendingInstructionID #' target='_blank'><span class='k-icon sbt-add'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Productions/BlendingInstructions", action = "Print" }) + "/#= BlendingInstructionID #/1' target='_blank'><span class='k-icon sbt-printer'></span></a> <a class='k-button' style='padding-left:0px; padding-right:0px' href='" + Url.RouteUrl("Default", new { controller = "Inventories/PackageIssues", action = "Delete" }) + "/#= PackageIssueID #'><span class='k-icon sbt-delete'></span></a>");
        })
        .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <button type="button" class="k-button" onclick="createWizard()"> <img src="~/Content/Images/Mains/Size24/folder-documents-icon-24.png" /> Lập phiếu cân </button>
                <div class="toolbar" style="float: right;">
                    <label>Nhập số phiếu, ca sx, thành phẩm hoặc NVL </label>
                    <input id="indexFilterText" class="k-textbox" style="text-align: center; " onkeyup="indexFilterText_KeyUp()" />
                </div>
            </text>);
        })
        .Filterable(f => f.Enabled(false))    
            .Pageable()
            //.Groupable(g => g.Messages(messages => messages.Empty("Phân nhóm dữ liệu: Kéo và thả tiêu đề một hoặc nhiều cột dữ liệu ngay bên dưới vào đây để phân nhóm hiển thị theo phân cấp của các cột dữ liệu")))            
            .Selectable()
            .Sortable()
            .Events(e =>
            {
                e.DataBound("hightLightSelectedRow");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Group(group => group.AddDescending(p => p.EntryDate)).Group(group => group.Add(p => p.WorkshiftName)).Group(group => group.Add(p => p.BlendingInstructionBriefs))
                .Read(read => read.Action("GetPackageIssueIndexes", "PackageIssueAPIs", new { area = "Inventories" }))
                .Sort(sort =>
                    {
                        sort.Add(p => p.EntryDate).Descending();
                        sort.Add(p => p.PackageIssueID).Descending();
                    })
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(x => x.PackageIssueID);
                    model.Field(m => m.PackageIssueID).DefaultValue(0);
                })
                .ServerOperation(true)
                .Aggregates(a => a.Add(x => x.TotalRows).Sum())
                .Aggregates(a => a.Add(x => x.TotalQuantity).Sum())
                )
            .HtmlAttributes(new { @class = "grid-class" })
    )
</div>



<script type="text/javascript">

    function hightLightSelectedRow(e) {
        require(["kindexGrid"], function (kindexGrid) {
            var kindexGridInstance = new kindexGrid("kendoGridIndex");
            kindexGridInstance.setSelectedRow("PackageIssueID", '@ViewBag.SelectedEntityID');
        });
    }

    function createWizard() {
        require(["kpopupWindow"], function (kpopupWindow) {
            var createWizardWindow = new kpopupWindow();
            createWizardWindow.openWindow($("#popupWindow"), "@Url.Action("CreateWizard", "PackageIssues")", "Chọn lệnh sản xuất", "@Settings.PopupWidth", "@Settings.PopupHeight");
        });
    }


    decoratingKindex = function (idx, elem) {
        if (elem.Approved == null || elem.Approved == false) {
            $('tr[data-uid="' + elem.uid + '"]').addClass("NotApproved");
        }
    }






    function indexFilterText_KeyUp() {
        var indexFilterText = $("#indexFilterText").val(), gridDetails = $("#kendoGridIndex").data("kendoGrid");

        if ((indexFilterText && indexFilterText.length >= "@Settings.AutoCompleteMinLenght") || $("#ShowPendingOnly").val() != "0") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "Reference", operator: "contains", value: indexFilterText },
                    { field: "WorkshiftName", operator: "contains", value: indexFilterText },
                    { field: "BlendingInstructionsCode", operator: "contains", value: indexFilterText },
                    { field: "BlendingInstructionsReference", operator: "contains", value: indexFilterText },
                    { field: "CommodityCode", operator: "contains", value: indexFilterText },
                    { field: "CommodityName", operator: "contains", value: indexFilterText },
                    { field: "Caption", operator: "contains", value: indexFilterText }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }

</script>


