@using TotalBase.Enums

@model TotalPortal.Areas.Productions.ViewModels.BlendingInstructionViewModel

@{Layout = "~/Views/Shared/_LayoutPopup.cshtml";}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.Partial("~/Views/Helpers/Bases/_BaseSectionTop.cshtml")    
    @Html.Hidden("CommodityTypeID", (int)GlobalEnums.CommodityTypeID.Products)
    
    @Html.HiddenFor(model => model.ParentID)
    @Html.HiddenFor(model => model.EntryDate)

    @(Html.Kendo().TabStrip()
        .HtmlAttributes(new { @style = "height: 468px; margin-left: 0px; margin-right: 0px;" })
        .Name("tabStrip")
        .Items(tabStrip =>
        {
            tabStrip.Add().Text("Lập đơn hàng mới")
                .Selected(true)
                .Content(@<text>
                    <div style="margin-top: 31px; margin-right: 18px;">
                    </div>                
                    @Html.EditorFor(d => d.Commodity, "AutoCompletes/Commodity", new { CommodityDescriptionHidden = "false", CommodityDisplayCode = @Model.GetDisplayName(m => m.Commodity) })

                    <div class="right-first-panel">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, new { @class = "right-panel-label" })
                            <div class="div-input">
                                @Html.Kendo().MaskedTextBoxFor(model => model.Code).HtmlAttributes(new { @class = "right-panel-input" })
                            </div>
                            <div class="div-validation-message">
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </text>);

    
            tabStrip.Add().Text("Bổ sung phụ gia cho đơn hàng đã có")
                .Content(@<text>
                    @Html.Partial("~/Areas/Productions/Views/BlendingInstructions/_GetRunning.cshtml")
                </text>);
        })
    )
    
    <div class="background-bar" style="height: 45px;">
        <div class="popup-button-bar">
            <input id="submitCreateWizard" type="submit" formaction="@Url.Action("CreateWizard", "BlendingInstructions")" formtarget="_top" style="display:none" />

            <button type="button" class="k-button" onclick="okButton_Click()"> <img src="~/Content/Images/Mains/Size24/Accept-Total.png" /> Tiếp tục </button>
            <button type="button" class="k-button" onclick="window.parent.$('#myWindow').data('kendoWindow').close()"> <img src="~/Content/Images/Mains/Size24/Users-Exit-icon-24.png" /> Thoát </button>
        </div>
    </div>

}

<link href="@Url.Content("~/Content/CustomCss/GeneralPopup.css")" rel="stylesheet" type="text/css" />

<script type="text/javascript">

    function okButton_Click() {
        handleOKEvent($("#tabStrip").data("kendoTabStrip").select().index() === 1 ? $("#blendingInstructionRunningGrid").data("kendoGrid") : undefined);
    }

    function handleOKEvent(selectedGrid) { //This javascript is now used only here. Later, if it is used somewhere else, it should be break into a standalone js file, and then just only add a link here
        if (selectedGrid === undefined) {
            if ($("#Code").val() == undefined || $("#Code").val().trim() == "") return false;
            return $.ajax({
                url: window.urlCheckBlendingInstructionCode,
                data: JSON.stringify({ "code": $("#Code").val() }),

                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    if (result.CheckResult != "") {
                        if (!confirm('\r     Số BI: ' + $("#Code").val() + ' đã có rồi.\r\r\r\n     Chọn OK để tiếp tục tạo đơn hàng này, hoặc chọn Cancel để nhập lại số BI khác.     ')) return false;
                        _setModelInput();
                    }
                    else //NOT EXISTING YET
                        _setModelInput();
                },
                error: function (jqXHR, textStatus) {
                    alert(textStatus);
                    return false;
                }
            });
        }
        else {
            var selectedDataItem = selectedGrid.dataItem(selectedGrid.select());
            if (selectedDataItem === undefined)
                return false;
            else {
                $("#ParentID").val(selectedDataItem === undefined || selectedDataItem.BlendingInstructionID === undefined ? null : selectedDataItem.BlendingInstructionID);
                $("#Code").val(selectedDataItem === undefined || selectedDataItem.BlendingInstructionCode === undefined ? null : selectedDataItem.BlendingInstructionCode);
                $("#EntryDate").val(selectedDataItem === undefined || selectedDataItem.BlendingInstructionEntryDate === undefined ? null : kendo.toString(selectedDataItem.BlendingInstructionEntryDate, Settings.DateTimeFormat));

                $("#Commodity_CommodityID").val(selectedDataItem === undefined || selectedDataItem.CommodityID === undefined ? null : selectedDataItem.CommodityID);
                $("#Commodity_Code").val(selectedDataItem === undefined || selectedDataItem.CommodityCode === undefined ? null : selectedDataItem.CommodityCode);
                $("#Commodity_Name").val(selectedDataItem === undefined || selectedDataItem.CommodityName === undefined ? null : selectedDataItem.CommodityName);
            }

            _setModelInput(selectedDataItem);
        }




        function _setModelInput(selectedDataItem) {
            if ($("#Commodity_CommodityID").val() === null || $("#Commodity_CommodityID").val() === "")
                return false;

            $("#submitCreateWizard").trigger("click");
        }
    }

    window.urlCheckBlendingInstructionCode = '@Url.Action("CheckBlendingInstructionCode", "BlendingInstructionAPIs", new { area = "Productions" })';
</script>





