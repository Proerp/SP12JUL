@using TotalBase.Enums;
@using TotalPortal.Configuration

@using TotalDTO.Commons
@using TotalModel.Models;

@{Layout = "~/Views/Shared/_LayoutPopup.cshtml";}

@model BomBaseDTO

@Html.HiddenFor(model => model.BomID)


@(Html.Kendo().Grid<BomValue>()
    .Name("kendoGridDetails")
    .Columns(columns =>
    {
        columns.Bound(c => c.BomID).Hidden();
        columns.Bound(c => c.BomDetailID).Hidden();
        columns.Bound(c => c.CommodityCode).Title("Mã").Width(68).HtmlAttributes(new { @readonly = "readonly" }).EditorTemplateName("StringReadonly");
        columns.Bound(c => c.CommodityName).Title("Tên").Width(88).HtmlAttributes(new { @readonly = "readonly" }).EditorTemplateName("StringReadonly");

        columns.Bound(c => c.BlockQuantity).Title("KL").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(27).Hidden()
            .Format(Settings.kfmQuantity)
            .ClientTemplate("#= kendo.format('" + Settings.kfmQuantity + "', BlockQuantity) #" + "<input type='hidden' name='CommodityBom.BlockQuantity' value='#= BlockQuantity #' />");

        columns.Bound(c => c.LayerCode).Title("Trục").Width(20).Hidden().HtmlAttributes(new { @readonly = "readonly" }).EditorTemplateName("StringReadonly").HtmlAttributes(new { @class = "grid-column-center" }).HeaderHtmlAttributes(new { @style = "text-align: center" });

        columns.Bound(c => c.BlockUnit).Title("%").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(15).Hidden()
            .Format(Settings.kfmN0)
            .ClientTemplate("#= kendo.format('" + Settings.kfmN0 + "', BlockUnit) #" + "<input type='hidden' name='CommodityBom.BlockUnit' value='#= BlockUnit #' />");
        columns.Bound(c => c.Quantity).Title("KL Y/C").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(27)
            .Format(Settings.kfmQuantity)
            .ClientTemplate("#= kendo.format('" + Settings.kfmQuantity + "', Quantity) #" + "<input type='hidden' name='CommodityBom.Quantity' value='#= Quantity #' />");
        columns.Bound(c => c.QuantityAvailables).Title("Tồn kho").HtmlAttributes(new { @class = "grid-number-column" }).HeaderHtmlAttributes(new { @style = "text-align: right" }).Width(27)
            .Format(Settings.kfmQuantity)
            .ClientTemplate("#= kendo.format('" + Settings.kfmQuantity + "', QuantityAvailables) #" + "<input type='hidden' name='CommodityBom.QuantityAvailables' value='#= QuantityAvailables #' />");
    })

    .Scrollable(s => s.Height(Settings.PopupContentHeightLarge))
    .ToolBar(toolbar =>
                {
                    toolbar.Template(@<text>
                        <span style="float:right">
                            @Html.Kendo().NumericTextBoxFor(model => model.PrintOptionID).HtmlAttributes(new { @style = "width: 118px;" }).Events(e => e.Change("updateQuantities").Spin("updateQuantities"))
                        </span>
                    </text>);
                })

    .Events(events =>
        {
            events.DataBound("colorLayerCode");
        })
    .DataSource(ds => ds.Ajax()
    .Model(model => model.Id(x => x.BomDetailID))
    .Read(read => read.Action("GetBomValues", "BomAPIs", new { area = "Commons" }).Data(@<text>
        function (e) {
        return {
        bomID: $("#BomID").val(),
        quantity: $("#PrintOptionID").val(),
        overStockOnly: true
        };}
    </text>))
    .ServerOperation(true))
    .Editable(e => e.Enabled(false))
    .Selectable()
)

<div class="background-bar" style="height: 45px;">
    <div class="popup-button-bar">
        <button type="button" class="k-button" onclick="window.parent.$('#myWindow').data('kendoWindow').close()"> <img src="~/Content/Images/Mains/Size24/Users-Exit-icon-24.png" /> Đóng </button>
    </div>
</div>

<script src="@Url.Content("~/Scripts/Controllers/Commons/Boms/ColorLayerCode.js")"></script>

<script type="text/javascript">
    function updateQuantities() {
        var quantityMaterialEstimated = DoRound($("#PrintOptionID").val(), 2); //requireConfig.websiteOptions.rndQuantity

        var kenGrid = $("#kendoGridDetails").data("kendoGrid");
        kenGrid.bind("dataBinding", function (e) { e.preventDefault(); }); //You can prevent the data bind action at the dataBinding event, when updating multiple model properties

        var allDataRows = kenGrid.dataSource.data();
        for (var i = 0; i < allDataRows.length; i++) {
            var dataItem = allDataRows[i];

            var quantity = (((quantityMaterialEstimated * dataItem.BlockUnit) / 100) * (dataItem.BlockQuantity / dataItem.LayerQuantity));

            dataItem.set("Quantity", DoRound(quantity, 2)); //requireConfig.websiteOptions.rndQuantity
        }

        kenGrid.unbind("dataBinding"); //When finish modifying the data, unbind dataBinding event
        kenGrid.refresh(); //Then, finally, refresh grid
    }
</script>