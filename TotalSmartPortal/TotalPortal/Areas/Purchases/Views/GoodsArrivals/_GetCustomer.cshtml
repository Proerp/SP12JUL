@using TotalPortal.Configuration
@using TotalModel.Models;

@(Html.Kendo().Grid<GoodsArrivalPendingCustomer>()
    .Name("goodsArrivalPendingCustomerGrid")

    .Columns(columns =>
    {
        columns.Bound(c => c.CustomerCode).Title("Mã NCC").Width(60);
        columns.Bound(c => c.CustomerName).Title("Nhà cung cấp").Width(190);
        columns.Bound(c => c.TransporterCode).Title("Mã GH").Width(60);
        columns.Bound(c => c.TransporterName).Title("Đơn vị giao hàng").Width(190);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
            <div class="toolbar" style="float: right;">
                <label>Nhập mã, tên NCC hay đơn vị giao hàng</label>
                <input id="goodsArrivalPendingCustomerFilter" class="k-textbox" style="text-align: center; margin-right: 13px;" onkeyup="goodsArrivalPendingCustomerFilter_KeyUp()" />
            </div>
        </text>);
    })
    .Scrollable(s => s.Height(Settings.PopupContentHeightMedium))
    .DataSource(ds => ds.Ajax()
        .Read(read => read.Action("GetCustomers", "GoodsArrivalAPIs", new { area = "Purchases" }).Data("onAdditionalGetCustomers"))
        .ServerOperation(false)
    )
    .Selectable()
)

<script type="text/javascript">
    function onAdditionalGetCustomers(e) {
        return {
            locationID: window.parent.requireConfig.pageOptions.LocationID,
            nmvnTaskID: window.parent.requireConfig.pageOptions.NmvnTaskID
        };
    }

    function goodsArrivalPendingCustomerFilter_KeyUp() {
        var goodsArrivalPendingCustomerFilter = $("#goodsArrivalPendingCustomerFilter").val(), gridDetails = $("#goodsArrivalPendingCustomerGrid").data("kendoGrid");

        if (goodsArrivalPendingCustomerFilter && goodsArrivalPendingCustomerFilter.length >= "@Settings.AutoCompleteMinLenght") {
            gridDetails.dataSource.filter({
                logic: "or",
                filters: [
                    { field: "CustomerCode", operator: "contains", value: goodsArrivalPendingCustomerFilter },
                    { field: "CustomerName", operator: "contains", value: goodsArrivalPendingCustomerFilter },
                    { field: "TransporterCode", operator: "contains", value: goodsArrivalPendingCustomerFilter },
                    { field: "TransporterName", operator: "contains", value: goodsArrivalPendingCustomerFilter }
                ]
            });


        } else {
            if (gridDetails.dataSource.filter() != undefined)
                gridDetails.dataSource.filter({});
        }
    }


    $("#goodsArrivalPendingCustomerGrid").dblclick(function (e) {
        okButton_Click();
    })
</script>
