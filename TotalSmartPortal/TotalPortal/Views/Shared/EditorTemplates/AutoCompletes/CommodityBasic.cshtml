@using TotalPortal.Configuration

@model TotalDTO.Commons.ICommodityBaseDTO


<div class="div-input">
    @(Html.Kendo().AutoCompleteFor(model => model.Code)
        .DataTextField("Code")
        .Filter("contains")
        .MinLength(Settings.AutoCompleteMinLenght)
        .Placeholder("Vui lòng chọn " + (ViewData["CommodityDisplayCode"] != null ? (ViewData["CommodityDisplayCode"]).ToString().ToLower() : "mặt hàng"))
        .HeaderTemplate("<div class=\"dropdown-header general-custom-header commodity-custom-header\">" +
                "<span class=\"k-widget k-header\">Mã</span>" +
                "<span class=\"k-widget k-header\">Tên</span>" +
                "</div>")
        .Template("<div class=\"dropdown-body general-custom-body commodity-custom-body\">" +
                "<span class=\"k-state-default\"><p>#: data.Code #</p></span>" +
                "<span class=\"k-state-default\"><p>#: data.Name #</p></span>" +
                "</div>")


        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("SearchCommodities", "CommodityAPIs", new { area = "Commons" }).Data(@<text>
                    function(e) {
                        return {
                        searchText: e.filter.filters[0].value,
                        commodityTypeIDList: typeof requireConfig !== 'undefined' ? requireConfig.pageOptions.masterCommodityTypeIDs : ($("#CommodityTypeID").val() != undefined ? $("#CommodityTypeID").val() : '0'),
                        isOnlyAlphaNumericString: false
                    };}
                </text>);//Send parameter to controller search action
            })
            .ServerFiltering(true);
        })
        .Events(e =>
        {
            e.Select("commodity_Select");
            e.DataBound("commodity_DataBound");
        })
        .HtmlAttributes(new { @class = "CommodityBase_AutoComplete right-panel-input" })
    )
</div>

<div class="div-validation-message">
    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
</div>




<script type="text/javascript">

    getCommodityModelID = function (modelID) {
        return modelID.substring(0, modelID.length - 4); //At first: Pass: modelID = this.element.attr('id') = 'Commodity_Code', Then: Return: ('Commodity_Code').substring(0, modelID.length - 4) = 'Commodity_'
    }

    commodity_DataBound = function (e) {
        var modelID = getCommodityModelID(this.element.attr('id'));
        $(".k-animation-container:has(#" + modelID + "Code-list)").css("width", "746");
        $("#" + modelID + "Code-list").css("width", "746");
    }

    commodity_Select = function (e) {
        var modelID = getCommodityModelID(this.element.attr('id'));

        var dataItem = e.sender.dataItem(e.item.index());

        $("#" + modelID + "CommodityID").val(dataItem.CommodityID);
        $("#" + modelID + "Name").val(dataItem.Name);

        //Set display label
        $("#" + modelID + "label_Name").text(dataItem.Name == null ? "" : dataItem.Name);

        //Remember last AutoComplete value
        $("#" + modelID + "TempCode").val(dataItem.Code);

        //Trigger change event. This event is not used in this editor template. It will be catch out side of this editor template
        $("#" + modelID + "CommodityID").trigger("change");
    }

    $(".CommodityBase_AutoComplete").focusout(function (e) {
        var modelID = getCommodityModelID(this.id);
        $(this).val($("#" + modelID + "TempCode").val());
    });

</script>



<style>
    /*#region styles for calculate span column with*/

    /*Rule to calculate with:
    1) Define column for each body span column
    2) Header:
        2.1) All header span column width = the same body span column width
        2.2) Except: Last header width = Last body pan width + 10 (padding left 5, padding right 5 of .k-item) + 17 (17px is the scroll bar width)
        2.3) Total header width = Sum (all header pan width): Using this total value => assign to .k-animation-container .css("width", "Total header span column width") AT the DataBound Events
    */


    .commodity-custom-header > span:first-child {
        width: 224px;
    }

    .commodity-custom-header > span:last-child {
        width: 522px;
    }






    .k-item > .commodity-custom-body > span:first-child {
        width: 224px;
    }

    .k-item > .commodity-custom-body > span:last-child {
        width: 495px;
    }

    /*#endregion */




    /*#region styles for each use of the Editor tenplate CommodityBase.cshtml*/
    #Commodity_Code-list .k-item {
        white-space: nowrap;
    }
    /*CURRENT: Editor tenplate CommodityBase.cshtml bind with model Commodity => the autocomplete editor ID will be #Commodity_Code */
    /*LATER: if this Editor tenplate CommodityBase.cshtml is used for another model, Ex model: Receiver => the ID will be #Receiver_Code, then new css will be add. for this example #Receiver_Code-list .k-item {padding: 0px; white-space: nowrap;} */

    /*#endregion */
</style>
